#macro( parameterizedJs )
	
piggydb.namespace.import("piggydb.util.*");


##
## Initialization
##
jQuery(function() {
#if ($session.containsKey("scrollTopElement"))
  setScrollTopTo('$session.scrollTopElement');
#end

  jQuery.Autocompleter.defaults.formatItem = function(row) { 
    return escapeHtml(row[0]); 
  };
  jQuery("#searchForm_keywords").autocomplete(piggydb.server.autoCompleteUrl, {
    minChars: 1,
    selectFirst: true,
    multiple: false,
    scrollHeight: 300
  });

  prettyPrint();
  jQuery.updnWatermark.attachAll();
#if ($highlightedFragment)
  piggydb.widget.Fragment.highlight($highlightedFragment, null);
#end

#if ($user.isViewer())
	if (typeof piggydb.widget.QuickEdit != 'undefined') {
		piggydb.widget.QuickEdit.init = function() { /* disabled */ };
	}
	if (typeof piggydb.widget.Fragment != 'undefined') {
		piggydb.widget.Fragment.makeFragmentsDroppable = function(selector, hoverClass) { /* disabled */ };
	}
#end
});


##
## Contextualized Functions
##

function makeRelationsDraggable(selectorPrefix) {
#if (!$user.isViewer())
  jQuery(selectorPrefix + ".fragment-tools .relation-draggable").draggable({ 
    revert: true,
    helper: 'clone',
    appendTo: 'body',
    opacity: 0.70,
    zIndex: 120,
    cursorAt: { bottom: 2, right: 0 }
  });  
#end
}

function makeSelectedFragmentsDroppable() {
#if (!$user.isViewer())
  jQuery("#facebox-selected-fragments").droppable({
    accept: ".droppable-to-fragment",
    hoverClass: "selected-fragments-drophover",
    tolerance: 'intersect',
    drop: function(event, ui) {
      // add a tag
      if (ui.draggable.hasClass("tag-palette-draggable")) {
        var tagId = ui.draggable.find("span.tag span.id").text();
        var tagName = ui.draggable.find("span.tag a.tag").text();
        var message = "$messages.get("confirm-add-tags-to-selected")" +
          '<div class="detail">' + 
          '<span class="' + domain.miniTagIconClass(tagName) + '">&nbsp;<\/span> ' + escapeHtml(tagName) + 
          '<img class="arrow" src="$context/images/arrow-right.gif" alt="&rarr;"/>' + 
          "$messages.get("selected-fragments")<\/div>";
        showConfirmDialog("$messages.get("add-tag")", message, "$messages.get("add")", function () {
          var fm = document.forms['addTagsToSelectedForm'];
          fm.tagId.value = tagId;
          fm.submit();
        });
      }
      
      // add a relation
      if (ui.draggable.hasClass("relation-draggable")) {
        var fromId = ui.draggable.find(".fragment-id").text();
        var fromTitle = ui.draggable.find(".fragment-title").text();
        var message = "$messages.get("confirm-create-relations-to-selected")" +
          '<div class="detail">' + 
          "<strong>#" + fromId + "<\/strong> " + escapeHtml(fromTitle) + 
          '<img class="arrow" src="$context/images/arrow-right.gif" alt="&rarr;"/>' + 
          "$messages.get("selected-fragments")<\/div>";
        showConfirmDialog("$messages.get("create-relation")", message, "$messages.get("create")", function () {
          var fm = document.forms['createRelationsToSelectedForm'];
          fm.fromId.value = fromId;
          fm.submit();
        });
      }
    }
  });
#end
}
  
#end

